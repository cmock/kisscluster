# {{ ansible_managed }}

[Unit]
Description= VM {{item.name}}
Requires=drbd-resource@{{item.name}}.service
After=drbd-resource@{{item.name}}.service
StopWhenUnneeded=true

[Service]
ExecStartPre=/bin/mkdir -p /run/kvm
ExecStart=/usr/bin/qemu-system-x86_64 -enable-kvm -name {{item.name}} \
  -monitor unix:/run/kvm/{{item.name}}.mon,server,nowait \
  -serial unix:/run/kvm/{{item.name}}.serial,server,nowait \
  -cpu host -smp {{ item.cpus }} \
  -m {{ item.ram_megs }}M \
  -net bridge,br={{item.network_bridge}} -net nic,model=virtio,macaddr={{mac_addr_base}}:{{"%x" | format(item.drbd_minor)}} \
  -vnc :{{item.drbd_minor}} -k {{vnc_keyboard_lang}} \
  -drive file=/dev/drbd/by-res/{{item.name}}/0,cache=none,if=virtio \
{% for disk in item.more_disks %}
  -drive file=/dev/drbd/by-res/{{item.name}}/{{disk.drbd_volume}},cache=none,if=virtio \
{% endfor %}
  
ExecStop=/usr/sbin/vm-monitor {{item.name}} powerdown
TimeoutStopSec=60
Restart=on-failure
# qemu exit codes:
# poweroff -> 0
# panic -> just reboots, kvm doesn't exit (needs kernel.panic sysctl != 0)
TimeoutSec=300

[Install]
{% if item.primary_on == inventory_hostname %}
WantedBy=primary-vms.target all-vms.target
{% else %}
WantedBy=all-vms.target
{% endif %}

# {{ ansible_managed }}
